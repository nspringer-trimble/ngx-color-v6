{"version":3,"sources":["../../src/lib/common/helpers/checkboard.ts","../../../src/lib/common/checkboard.component.ts","../../../src/lib/common/coordinates.directive.ts","../../../src/lib/common/alpha.component.ts","../../src/lib/common/helpers/color.ts","../../../src/lib/common/color-wrap.component.ts","../../../src/lib/common/editable-input.component.ts","../../../src/lib/common/hue.component.ts","../../../src/lib/common/raised.component.ts","../../../src/lib/common/saturation.component.ts","../../../src/lib/common/swatch.component.ts","../../../src/lib/common/shade.component.ts"],"names":["checkboardCache","render","c1","c2","size","document","canvas","createElement","width","height","ctx","getContext","fillStyle","fillRect","translate","toDataURL","getCheckerboard","key","checkboard","CheckboardComponent","this","white","grey","prototype","ngOnInit","background","gridStyles","borderRadius","boxShadow","Component","args","selector","template","preserveWhitespaces","changeDetection","ChangeDetectionStrategy","OnPush","Input","NgModule","declarations","exports","imports","CommonModule","CoordinatesDirective","el","coordinatesChange","Subject","mousechange","mouseListening","mousemove","$event","x","y","isTouch","preventDefault","next","mouseup","mousedown","_this","sub","pipe","distinctUntilChanged","p","q","subscribe","n","handleChange","ngOnDestroy","unsubscribe","containerWidth","nativeElement","clientWidth","containerHeight","clientHeight","left","getBoundingClientRect","window","pageXOffset","top","pageYOffset","Directive","ElementRef","Output","HostListener","type","AlphaComponent","direction","onChange","EventEmitter","ngOnChanges","pointerLeft","pointerTop","rgb","a","gradient","r","g","b","_a","data","Math","round","hsl","h","s","l","source","emit","simpleCheckForValidColor","checked","passed","forEach","letter","isNaN","test","toState","oldHue","disableAlpha","color","hex","TinyColor","setAlpha","toHsl","hsv","toHsv","toRgb","toHex","toHexString","CheckboardModule","CoordinatesModule","ColorWrap","onChangeComplete","onSwatchHover","changes","debounceTime","setState","currentColor","afterValidChange","handleSwatchHover","EditableInputComponent","placeholder","focus","wrapStyle","style","wrap","inputStyle","input","labelStyle","label","dragLabel","cursor","handleFocus","handleFocusOut","currentValue","blurValue","handleKeydown","stringValue","String","target","value","isPercentage","indexOf","num","Number","replace","amount","arrowOffset","keyCode","_b","handleKeyup","toUpperCase","fromEvent","ev","handleDrag","handleMousedown","newValue","movementX","dragMax","HueComponent","hidePointer","zDepth","radius","RaisedComponent","SaturationComponent","v","saturation","bright","SwatchComponent","focusStyle","onClick","onHover","divStyles","focusStyles","inFocus","Object","assign","currentStyles","handleHover","handleClick","ShadeComponent","col","isValid"],"mappings":"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","sourcesContent":["const checkboardCache: {[key: string]: string} = {};\r\n\r\nexport function render(c1: string, c2: string, size: number) {\r\n  if (typeof document === 'undefined') {\r\n    return null;\r\n  }\r\n  const canvas = document.createElement('canvas');\r\n  canvas.width = size * 2;\r\n  canvas.height = size * 2;\r\n  const ctx = canvas.getContext('2d');\r\n  if (!ctx) {\r\n    return null;\r\n  } // If no context can be found, return early.\r\n  ctx.fillStyle = c1;\r\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n  ctx.fillStyle = c2;\r\n  ctx.fillRect(0, 0, size, size);\r\n  ctx.translate(size, size);\r\n  ctx.fillRect(0, 0, size, size);\r\n  return canvas.toDataURL();\r\n}\r\n\r\nexport function getCheckerboard(c1: string, c2: string, size: number) {\r\n  const key = `${c1}-${c2}-${size}`;\r\n  if (checkboardCache[key]) {\r\n    return checkboardCache[key];\r\n  }\r\n  const checkboard = render(c1, c2, size);\r\n  if (!checkboard) {\r\n    return null;\r\n  }\r\n  checkboardCache[key] = checkboard;\r\n  return checkboard;\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  Input,\r\n  NgModule,\r\n  OnInit,\r\n} from '@angular/core';\r\n\r\nimport { getCheckerboard } from './helpers/checkboard';\r\n\r\n@Component({\r\n  selector: 'color-checkboard',\r\n  template: `<div class=\"grid\" [ngStyle]=\"gridStyles\"></div>`,\r\n  styles: [\r\n    `\r\n  .grid {\r\n    top: 0px;\r\n    right: 0px;\r\n    bottom: 0px;\r\n    left: 0px;\r\n    position: absolute;\r\n  }\r\n  `,\r\n  ],\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CheckboardComponent implements OnInit {\r\n  @Input() white = 'transparent';\r\n  @Input() size = 8;\r\n  @Input() grey = 'rgba(0,0,0,.08)';\r\n  @Input() boxShadow!: string;\r\n  @Input() borderRadius!: string;\r\n  gridStyles!: Record<string, string>;\r\n\r\n  ngOnInit() {\r\n    const background = getCheckerboard(this.white, this.grey, this.size);\r\n    this.gridStyles = {\r\n      borderRadius: this.borderRadius,\r\n      boxShadow: this.boxShadow,\r\n      background: `url(${background}) center left`,\r\n    };\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [CheckboardComponent],\r\n  exports: [CheckboardComponent],\r\n  imports: [CommonModule],\r\n})\r\nexport class CheckboardModule {}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  HostListener,\r\n  NgModule,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\n\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { distinctUntilChanged } from 'rxjs/operators';\r\n\r\n@Directive({ selector: '[ngx-color-coordinates]' })\r\nexport class CoordinatesDirective implements OnInit, OnDestroy {\r\n  @Output()\r\n  coordinatesChange = new Subject<{\r\n    x: number;\r\n    y: number;\r\n    top: number;\r\n    left: number;\r\n    containerWidth: number;\r\n    containerHeight: number;\r\n    $event: any;\r\n  }>();\r\n  private mousechange = new Subject<{\r\n    x: number;\r\n    y: number;\r\n    $event: any;\r\n    isTouch: boolean;\r\n  }>();\r\n\r\n  private mouseListening = false;\r\n  private sub!: Subscription;\r\n  @HostListener('window:mousemove', ['$event', '$event.pageX', '$event.pageY'])\r\n  @HostListener('window:touchmove', [\r\n    '$event',\r\n    '$event.touches[0].clientX',\r\n    '$event.touches[0].clientY',\r\n    'true',\r\n  ])\r\n  mousemove($event: Event, x: number, y: number, isTouch = false) {\r\n    if (this.mouseListening) {\r\n      $event.preventDefault();\r\n      this.mousechange.next({ $event, x, y, isTouch });\r\n    }\r\n  }\r\n  @HostListener('window:mouseup')\r\n  @HostListener('window:touchend')\r\n  mouseup() {\r\n    this.mouseListening = false;\r\n  }\r\n  @HostListener('mousedown', ['$event', '$event.pageX', '$event.pageY'])\r\n  @HostListener('touchstart', [\r\n    '$event',\r\n    '$event.touches[0].clientX',\r\n    '$event.touches[0].clientY',\r\n    'true',\r\n  ])\r\n  mousedown($event: Event, x: number, y: number, isTouch = false) {\r\n    $event.preventDefault();\r\n    this.mouseListening = true;\r\n    this.mousechange.next({ $event, x, y, isTouch });\r\n  }\r\n\r\n  constructor(private el: ElementRef) {}\r\n\r\n  ngOnInit() {\r\n    this.sub = this.mousechange\r\n      .pipe(\r\n        // limit times it is updated for the same area\r\n        distinctUntilChanged((p, q) => p.x === q.x && p.y === q.y),\r\n      )\r\n      .subscribe(n => this.handleChange(n.x, n.y, n.$event, n.isTouch));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.sub.unsubscribe();\r\n  }\r\n\r\n  handleChange(x: number, y: number, $event: Event, isTouch: boolean) {\r\n    const containerWidth = this.el.nativeElement.clientWidth;\r\n    const containerHeight = this.el.nativeElement.clientHeight;\r\n    const left =\r\n      x -\r\n      (this.el.nativeElement.getBoundingClientRect().left + window.pageXOffset);\r\n    let top = y - this.el.nativeElement.getBoundingClientRect().top;\r\n\r\n    if (!isTouch) {\r\n      top = top - window.pageYOffset;\r\n    }\r\n    this.coordinatesChange.next({\r\n      x,\r\n      y,\r\n      top,\r\n      left,\r\n      containerWidth,\r\n      containerHeight,\r\n      $event,\r\n    });\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [CoordinatesDirective],\r\n  exports: [CoordinatesDirective],\r\n})\r\nexport class CoordinatesModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  NgModule,\r\n  OnChanges,\r\n  Output,\r\n} from '@angular/core';\r\n\r\nimport { CheckboardModule } from './checkboard.component';\r\nimport { CoordinatesModule } from './coordinates.directive';\r\nimport { HSLA, RGBA } from './helpers/color.interfaces';\r\n\r\n\r\n@Component({\r\n  selector: 'color-alpha',\r\n  template: `\r\n  <div class=\"alpha\" [style.border-radius]=\"radius\">\r\n    <div class=\"alpha-checkboard\">\r\n      <color-checkboard></color-checkboard>\r\n    </div>\r\n    <div class=\"alpha-gradient\" [ngStyle]=\"gradient\" [style.box-shadow]=\"shadow\" [style.border-radius]=\"radius\"></div>\r\n    <div ngx-color-coordinates (coordinatesChange)=\"handleChange($event)\" class=\"alpha-container color-alpha-{{direction}}\">\r\n      <div class=\"alpha-pointer\" [style.left.%]=\"pointerLeft\" [style.top.%]=\"pointerTop\">\r\n        <div class=\"alpha-slider\" [ngStyle]=\"pointer\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  `,\r\n  styles: [\r\n    `\r\n    .alpha {\r\n      position: absolute;\r\n      top: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n    }\r\n    .alpha-checkboard {\r\n      position: absolute;\r\n      top: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n      overflow: hidden;\r\n    }\r\n    .alpha-gradient {\r\n      position: absolute;\r\n      top: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n    }\r\n    .alpha-container {\r\n      position: relative;\r\n      height: 100%;\r\n      margin: 0 3px;\r\n    }\r\n    .alpha-pointer {\r\n      position: absolute;\r\n    }\r\n    .alpha-slider {\r\n      width: 4px;\r\n      border-radius: 1px;\r\n      height: 8px;\r\n      box-shadow: 0 0 2px rgba(0, 0, 0, .6);\r\n      background: #fff;\r\n      margin-top: 1px;\r\n      transform: translateX(-2px);\r\n    },\r\n  `,\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class AlphaComponent implements OnChanges {\r\n  @Input() hsl!: HSLA;\r\n  @Input() rgb!: RGBA;\r\n  @Input() pointer!: Record<string, string>;\r\n  @Input() shadow!: string;\r\n  @Input() radius!: number | string;\r\n  @Input() direction: 'horizontal' | 'vertical' = 'horizontal';\r\n  @Output() onChange = new EventEmitter<any>();\r\n  gradient!: Record<string, string>;\r\n  pointerLeft!: number;\r\n  pointerTop!: number;\r\n\r\n  ngOnChanges() {\r\n    if (this.direction === 'vertical') {\r\n      this.pointerLeft = 0;\r\n      this.pointerTop = this.rgb.a * 100;\r\n      this.gradient = {\r\n        background: `linear-gradient(to bottom, rgba(${this.rgb.r},${\r\n          this.rgb.g\r\n        },${this.rgb.b}, 0) 0%,\r\n          rgba(${this.rgb.r},${this.rgb.g},${this.rgb.b}, 1) 100%)`,\r\n      };\r\n    } else {\r\n      this.gradient = {\r\n        background: `linear-gradient(to right, rgba(${this.rgb.r},${\r\n          this.rgb.g\r\n        },${this.rgb.b}, 0) 0%,\r\n          rgba(${this.rgb.r},${this.rgb.g},${this.rgb.b}, 1) 100%)`,\r\n      };\r\n      this.pointerLeft = this.rgb.a * 100;\r\n    }\r\n  }\r\n  handleChange({ top, left, containerHeight, containerWidth, $event }): void {\r\n    let data: any;\r\n    if (this.direction === 'vertical') {\r\n      let a: number;\r\n      if (top < 0) {\r\n        a = 0;\r\n      } else if (top > containerHeight) {\r\n        a = 1;\r\n      } else {\r\n        a = Math.round(top * 100 / containerHeight) / 100;\r\n      }\r\n\r\n      if (this.hsl.a !== a) {\r\n        data = {\r\n          h: this.hsl.h,\r\n          s: this.hsl.s,\r\n          l: this.hsl.l,\r\n          a,\r\n          source: 'rgb',\r\n        };\r\n      }\r\n    } else {\r\n      let a: number;\r\n      if (left < 0) {\r\n        a = 0;\r\n      } else if (left > containerWidth) {\r\n        a = 1;\r\n      } else {\r\n        a = Math.round(left * 100 / containerWidth) / 100;\r\n      }\r\n\r\n      if (this.hsl.a !== a) {\r\n        data = {\r\n          h: this.hsl.h,\r\n          s: this.hsl.s,\r\n          l: this.hsl.l,\r\n          a,\r\n          source: 'rgb',\r\n        };\r\n      }\r\n    }\r\n\r\n    if (!data) {\r\n      return;\r\n    }\r\n\r\n    this.onChange.emit({ data, $event });\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [AlphaComponent],\r\n  exports: [AlphaComponent],\r\n  imports: [CommonModule, CheckboardModule, CoordinatesModule],\r\n})\r\nexport class AlphaModule {}\r\n","import { TinyColor } from '@ctrl/tinycolor';\r\n\r\nimport { Color } from './color.interfaces';\r\n\r\nexport function simpleCheckForValidColor(data) {\r\n  const keysToCheck = ['r', 'g', 'b', 'a', 'h', 's', 'l', 'v'];\r\n  let checked = 0;\r\n  let passed = 0;\r\n  keysToCheck.forEach(letter => {\r\n    if (!data[letter]) {\r\n      return;\r\n    }\r\n    checked += 1;\r\n    if (!isNaN(data[letter])) {\r\n      passed += 1;\r\n    }\r\n    if (letter === 's' || letter === 'l') {\r\n      const percentPatt = /^\\d+%$/;\r\n      if (percentPatt.test(data[letter])) {\r\n        passed += 1;\r\n      }\r\n    }\r\n  });\r\n  return checked === passed ? data : false;\r\n}\r\n\r\nexport function toState(data, oldHue?: number, disableAlpha?: boolean): Color {\r\n  const color = data.hex ? new TinyColor(data.hex) : new TinyColor(data);\r\n  if (disableAlpha) {\r\n    color.setAlpha(1);\r\n  }\r\n\r\n  const hsl = color.toHsl();\r\n  const hsv = color.toHsv();\r\n  const rgb = color.toRgb();\r\n  const hex = color.toHex();\r\n  if (hsl.s === 0) {\r\n    hsl.h = oldHue || 0;\r\n    hsv.h = oldHue || 0;\r\n  }\r\n  const transparent = hex === '000000' && rgb.a === 0;\r\n\r\n  return {\r\n    hsl,\r\n    hex: transparent ? 'transparent' : color.toHexString(),\r\n    rgb,\r\n    hsv,\r\n    oldHue: data.h || oldHue || hsl.h,\r\n    source: data.source,\r\n  };\r\n}\r\n\r\nexport function isValidHex(hex: string) {\r\n  return new TinyColor(hex).isValid;\r\n}\r\n\r\nexport function getContrastingColor(data) {\r\n  if (!data) {\r\n    return '#fff';\r\n  }\r\n  const col = toState(data);\r\n  if (col.hex === 'transparent') {\r\n    return 'rgba(0,0,0,0.4)';\r\n  }\r\n  const yiq = (col.rgb.r * 299 + col.rgb.g * 587 + col.rgb.b * 114) / 1000;\r\n  return yiq >= 128 ? '#000' : '#fff';\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  NgModule,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\n\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\nimport { simpleCheckForValidColor, toState } from './helpers/color';\r\nimport { Color, HSLA, HSVA, RGBA } from './helpers/color.interfaces';\r\n\r\nexport interface ColorEvent {\r\n  $event: Event;\r\n  color: Color;\r\n}\r\n\r\n@Component({\r\n  // create seletor base for test override property\r\n  selector: 'color-wrap',\r\n  template: ``,\r\n})\r\nexport class ColorWrap implements OnInit, OnChanges, OnDestroy {\r\n  @Input() className?: string;\r\n  @Input() color: HSLA | HSVA | RGBA | string = {\r\n    h: 250,\r\n    s: 0.5,\r\n    l: 0.2,\r\n    a: 1,\r\n  };\r\n  @Output() onChange = new EventEmitter<ColorEvent>();\r\n  @Output() onChangeComplete = new EventEmitter<ColorEvent>();\r\n  @Output() onSwatchHover = new EventEmitter<ColorEvent>();\r\n  oldHue!: number;\r\n  hsl!: HSLA;\r\n  hsv!: HSVA;\r\n  rgb!: RGBA;\r\n  hex!: string;\r\n  source!: string;\r\n  currentColor!: string;\r\n  changes!: Subscription;\r\n  disableAlpha?: boolean;\r\n\r\n  ngOnInit() {\r\n    this.changes = this.onChange\r\n      .pipe(debounceTime(100))\r\n      .subscribe(x => this.onChangeComplete.emit(x));\r\n    this.setState(toState(this.color, 0));\r\n    this.currentColor = this.hex;\r\n  }\r\n  ngOnChanges() {\r\n    this.setState(toState(this.color, this.oldHue));\r\n  }\r\n  ngOnDestroy() {\r\n    this.changes.unsubscribe();\r\n  }\r\n  setState(data) {\r\n    this.oldHue = data.oldHue;\r\n    this.hsl = data.hsl;\r\n    this.hsv = data.hsv;\r\n    this.rgb = data.rgb;\r\n    this.hex = data.hex;\r\n    this.source = data.source;\r\n    this.afterValidChange();\r\n  }\r\n  handleChange(data, $event) {\r\n    const isValidColor = simpleCheckForValidColor(data);\r\n    if (isValidColor) {\r\n      const color = toState(data, data.h || this.oldHue, this.disableAlpha);\r\n      this.setState(color);\r\n      this.onChange.emit({ color, $event });\r\n      this.afterValidChange();\r\n    }\r\n  }\r\n  /** hook for components after a complete change */\r\n  afterValidChange() {}\r\n\r\n  handleSwatchHover(data, $event) {\r\n    const isValidColor = simpleCheckForValidColor(data);\r\n    if (isValidColor) {\r\n      const color = toState(data, data.h || this.oldHue);\r\n      this.setState(color);\r\n      this.onSwatchHover.emit({ color, $event });\r\n    }\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [ColorWrap],\r\n  exports: [ColorWrap],\r\n  imports: [CommonModule],\r\n})\r\nexport class ColorWrapModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  NgModule,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\n\r\nimport { fromEvent, Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'color-editable-input',\r\n  template: `\r\n    <div class=\"wrap\" [ngStyle]=\"wrapStyle\">\r\n      <input\r\n        [ngStyle]=\"inputStyle\"\r\n        spellCheck=\"false\"\r\n        [value]=\"currentValue\"\r\n        [placeholder]=\"placeholder\"\r\n        (keydown)=\"handleKeydown($event)\"\r\n        (keyup)=\"handleKeyup($event)\"\r\n        (focus)=\"handleFocus($event)\"\r\n        (focusout)=\"handleFocusOut($event)\"\r\n      />\r\n      <span *ngIf=\"label\" [ngStyle]=\"labelStyle\" (mousedown)=\"handleMousedown($event)\">\r\n        {{ label }}\r\n      </span>\r\n    </div>\r\n  `,\r\n  styles: [\r\n    `\r\n      :host {\r\n        display: flex;\r\n      }\r\n      .wrap {\r\n        position: relative;\r\n      }\r\n    `,\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class EditableInputComponent implements OnInit, OnChanges, OnDestroy {\r\n  @Input() style!: {\r\n    wrap?: Record<string, any>;\r\n    input?: Record<string, any>;\r\n    label?: Record<string, any>;\r\n  };\r\n  @Input() label!: string;\r\n  @Input() value!: string | number;\r\n  @Input() arrowOffset!: number;\r\n  @Input() dragLabel!: boolean;\r\n  @Input() dragMax!: number;\r\n  @Input() placeholder = '';\r\n  @Output() onChange = new EventEmitter();\r\n  currentValue!: string | number;\r\n  blurValue!: string;\r\n  wrapStyle!: Record<string, string>;\r\n  inputStyle!: Record<string, string>;\r\n  labelStyle!: Record<string, string>;\r\n  focus = false;\r\n  mousemove!: Subscription;\r\n  mouseup!: Subscription;\r\n\r\n  ngOnInit() {\r\n    this.wrapStyle = this.style && this.style.wrap ? this.style.wrap : {};\r\n    this.inputStyle = this.style && this.style.input ? this.style.input : {};\r\n    this.labelStyle = this.style && this.style.label ? this.style.label : {};\r\n    if (this.dragLabel) {\r\n      this.labelStyle.cursor = 'ew-resize';\r\n    }\r\n  }\r\n  handleFocus($event) {\r\n    this.focus = true;\r\n  }\r\n  handleFocusOut($event) {\r\n    this.focus = false;\r\n    this.currentValue = this.blurValue;\r\n  }\r\n  handleKeydown($event) {\r\n    // In case `e.target.value` is a percentage remove the `%` character\r\n    // and update accordingly with a percentage\r\n    // https://github.com/casesandberg/react-color/issues/383\r\n    const stringValue = String($event.target.value);\r\n    const isPercentage = stringValue.indexOf('%') > -1;\r\n    const num = Number(stringValue.replace(/%/g, ''));\r\n    if (isNaN(num)) {\r\n      return;\r\n    }\r\n    const amount = this.arrowOffset || 1;\r\n\r\n    // Up\r\n    if ($event.keyCode === 38) {\r\n      if (this.label) {\r\n        this.onChange.emit({\r\n          data: { [this.label]: num + amount },\r\n          $event,\r\n        });\r\n      } else {\r\n        this.onChange.emit({ data: num + amount, $event });\r\n      }\r\n\r\n      if (isPercentage) {\r\n        this.currentValue = `${num + amount}%`;\r\n      } else {\r\n        this.currentValue = num + amount;\r\n      }\r\n    }\r\n\r\n    // Down\r\n    if ($event.keyCode === 40) {\r\n      if (this.label) {\r\n        this.onChange.emit({\r\n          data: { [this.label]: num - amount },\r\n          $event,\r\n        });\r\n      } else {\r\n        this.onChange.emit({ data: num - amount, $event });\r\n      }\r\n\r\n      if (isPercentage) {\r\n        this.currentValue = `${num - amount}%`;\r\n      } else {\r\n        this.currentValue = num - amount;\r\n      }\r\n    }\r\n  }\r\n  handleKeyup($event) {\r\n    if ($event.keyCode === 40 || $event.keyCode === 38) {\r\n      return;\r\n    }\r\n    if (`${this.currentValue}` === $event.target.value) {\r\n      return;\r\n    }\r\n\r\n    if (this.label) {\r\n      this.onChange.emit({\r\n        data: { [this.label]: $event.target.value },\r\n        $event,\r\n      });\r\n    } else {\r\n      this.onChange.emit({ data: $event.target.value, $event });\r\n    }\r\n  }\r\n  ngOnChanges() {\r\n    if (!this.focus) {\r\n      this.currentValue = String(this.value).toUpperCase();\r\n      this.blurValue = String(this.value).toUpperCase();\r\n    } else {\r\n      this.blurValue = String(this.value).toUpperCase();\r\n    }\r\n  }\r\n  ngOnDestroy() {\r\n    this.unsubscribe();\r\n  }\r\n  subscribe() {\r\n    this.mousemove = fromEvent(document, 'mousemove').subscribe((ev: Event) => this.handleDrag(ev));\r\n    this.mouseup = fromEvent(document, 'mouseup').subscribe(() => this.unsubscribe());\r\n  }\r\n  unsubscribe() {\r\n    if (this.mousemove) {\r\n      this.mousemove.unsubscribe();\r\n    }\r\n    if (this.mouseup) {\r\n      this.mouseup.unsubscribe();\r\n    }\r\n  }\r\n  handleMousedown($event: Event) {\r\n    if (this.dragLabel) {\r\n      $event.preventDefault();\r\n      this.handleDrag($event);\r\n      this.subscribe();\r\n    }\r\n  }\r\n  handleDrag($event) {\r\n    if (this.dragLabel) {\r\n      const newValue = Math.round(this.value + $event.movementX);\r\n      if (newValue >= 0 && newValue <= this.dragMax) {\r\n        this.onChange.emit({ data: { [this.label]: newValue }, $event });\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [EditableInputComponent],\r\n  exports: [EditableInputComponent],\r\n  imports: [CommonModule],\r\n})\r\nexport class EditableInputModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  NgModule,\r\n  OnChanges,\r\n  Output,\r\n} from '@angular/core';\r\n\r\nimport { CoordinatesModule } from './coordinates.directive';\r\nimport { HSLA, HSLAsource } from './helpers/color.interfaces';\r\n\r\n@Component({\r\n  selector: 'color-hue',\r\n  template: `\r\n  <div class=\"color-hue color-hue-{{direction}}\" [style.border-radius.px]=\"radius\" [style.box-shadow]=\"shadow\">\r\n    <div ngx-color-coordinates (coordinatesChange)=\"handleChange($event)\" class=\"color-hue-container\">\r\n      <div class=\"color-hue-pointer\" [style.left]=\"left\" [style.top]=\"top\" *ngIf=\"!hidePointer\">\r\n        <div class=\"color-hue-slider\" [ngStyle]=\"pointer\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  `,\r\n  styles: [\r\n    `\r\n    .color-hue {\r\n      position: absolute;\r\n      top: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n    }\r\n    .color-hue-container {\r\n      margin: 0 2px;\r\n      position: relative;\r\n      height: 100%;\r\n    }\r\n    .color-hue-pointer {\r\n      position: absolute;\r\n    }\r\n    .color-hue-slider {\r\n      margin-top: 1px;\r\n      width: 4px;\r\n      border-radius: 1px;\r\n      height: 8px;\r\n      box-shadow: 0 0 2px rgba(0, 0, 0, .6);\r\n      background: #fff;\r\n      transform: translateX(-2px);\r\n    }\r\n    .color-hue-horizontal {\r\n      background: linear-gradient(to right, #f00 0%, #ff0 17%, #0f0\r\n        33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);\r\n    }\r\n    .color-hue-vertical {\r\n      background: linear-gradient(to top, #f00 0%, #ff0 17%, #0f0 33%,\r\n        #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);\r\n    }\r\n  `,\r\n  ],\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class HueComponent implements OnChanges {\r\n  @Input() hsl!: HSLA;\r\n  @Input() pointer!: Record<string, string>;\r\n  @Input() radius!: number;\r\n  @Input() shadow!: string;\r\n  @Input() hidePointer = false;\r\n  @Input() direction: 'horizontal' | 'vertical' = 'horizontal';\r\n  @Output() onChange = new EventEmitter<{ data: HSLAsource; $event: Event }>();\r\n  left = '0px';\r\n  top = '';\r\n\r\n  ngOnChanges(): void {\r\n    if (this.direction === 'horizontal') {\r\n      this.left = `${this.hsl.h * 100 / 360}%`;\r\n    } else {\r\n      this.top = `${-(this.hsl.h * 100 / 360) + 100}%`;\r\n    }\r\n  }\r\n  handleChange({ top, left, containerHeight, containerWidth, $event }): void {\r\n    let data: HSLAsource | undefined;\r\n    if (this.direction === 'vertical') {\r\n      let h: number;\r\n      if (top < 0) {\r\n        h = 359;\r\n      } else if (top > containerHeight) {\r\n        h = 0;\r\n      } else {\r\n        const percent = -(top * 100 / containerHeight) + 100;\r\n        h = 360 * percent / 100;\r\n      }\r\n\r\n      if (this.hsl.h !== h) {\r\n        data = {\r\n          h,\r\n          s: this.hsl.s,\r\n          l: this.hsl.l,\r\n          a: this.hsl.a,\r\n          source: 'rgb',\r\n        };\r\n      }\r\n    } else {\r\n      let h: number;\r\n      if (left < 0) {\r\n        h = 0;\r\n      } else if (left > containerWidth) {\r\n        h = 359;\r\n      } else {\r\n        const percent = left * 100 / containerWidth;\r\n        h = 360 * percent / 100;\r\n      }\r\n\r\n      if (this.hsl.h !== h) {\r\n        data = {\r\n          h,\r\n          s: this.hsl.s,\r\n          l: this.hsl.l,\r\n          a: this.hsl.a,\r\n          source: 'rgb',\r\n        };\r\n      }\r\n    }\r\n\r\n    if (!data) {\r\n      return;\r\n    }\r\n\r\n    this.onChange.emit({ data, $event });\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [HueComponent],\r\n  exports: [HueComponent],\r\n  imports: [CommonModule, CoordinatesModule],\r\n})\r\nexport class HueModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { ChangeDetectionStrategy, Component, Input, NgModule } from '@angular/core';\r\n\r\nexport type zDepth = 0 | 1 | 2 | 3 | 4 | 5;\r\n\r\n@Component({\r\n  selector: 'color-raised',\r\n  template: `\r\n  <div class=\"raised-wrap\">\r\n    <div class=\"raised-bg zDepth-{{zDepth}}\" [style.background]=\"background\"></div>\r\n    <div class=\"raised-content\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  </div>\r\n  `,\r\n  styles: [`\r\n    .raised-wrap {\r\n      position: relative;\r\n      display: inline-block;\r\n    }\r\n    .raised-bg {\r\n      position: absolute;\r\n      top: 0px;\r\n      right: 0px;\r\n      bottom: 0px;\r\n      left: 0px;\r\n    }\r\n    .raised-content {\r\n      position: relative;\r\n    }\r\n    .zDepth-0 {\r\n      box-shadow: none;\r\n    }\r\n    .zDepth-1 {\r\n      box-shadow: 0 2px 10px rgba(0,0,0,.12), 0 2px 5px rgba(0,0,0,.16);\r\n    }\r\n    .zDepth-2 {\r\n      box-shadow: 0 6px 20px rgba(0,0,0,.19), 0 8px 17px rgba(0,0,0,.2);\r\n    }\r\n    .zDepth-3 {\r\n      box-shadow: 0 17px 50px rgba(0,0,0,.19), 0 12px 15px rgba(0,0,0,.24);\r\n    }\r\n    .zDepth-4 {\r\n      box-shadow: 0 25px 55px rgba(0,0,0,.21), 0 16px 28px rgba(0,0,0,.22);\r\n    }\r\n    .zDepth-5 {\r\n      box-shadow: 0 40px 77px rgba(0,0,0,.22), 0 27px 24px rgba(0,0,0,.2);\r\n    }\r\n  `],\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class RaisedComponent {\r\n  @Input() zDepth: zDepth = 1;\r\n  @Input() radius = 1;\r\n  @Input() background = '#fff';\r\n}\r\n\r\n@NgModule({\r\n  declarations: [RaisedComponent],\r\n  exports: [RaisedComponent],\r\n  imports: [CommonModule],\r\n})\r\nexport class RaisedModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  NgModule,\r\n  OnChanges,\r\n  Output,\r\n} from '@angular/core';\r\n\r\n\r\nimport { CoordinatesModule } from './coordinates.directive';\r\nimport { HSLA, HSVA, HSVAsource } from './helpers/color.interfaces';\r\n\r\n@Component({\r\n  selector: 'color-saturation',\r\n  template: `\r\n  <div class=\"color-saturation\" ngx-color-coordinates (coordinatesChange)=\"handleChange($event)\" [style.background]=\"background\">\r\n    <div class=\"saturation-white\">\r\n      <div class=\"saturation-black\"></div>\r\n      <div class=\"saturation-pointer\" [ngStyle]=\"pointer\" [style.top]=\"pointerTop\" [style.left]=\"pointerLeft\">\r\n        <div class=\"saturation-circle\" [ngStyle]=\"circle\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  `,\r\n  styles: [\r\n    `\r\n    .saturation-white {\r\n      background: linear-gradient(to right, #fff, rgba(255,255,255,0));\r\n      position: absolute;\r\n      top: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n    }\r\n    .saturation-black {\r\n      background: linear-gradient(to top, #000, rgba(0,0,0,0));\r\n      position: absolute;\r\n      top: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n    }\r\n    .color-saturation {\r\n      position: absolute;\r\n      top: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n    }\r\n    .saturation-pointer {\r\n      position: absolute;\r\n      cursor: default;\r\n    }\r\n    .saturation-circle {\r\n      width: 4px;\r\n      height: 4px;\r\n      box-shadow: 0 0 0 1.5px #fff, inset 0 0 1px 1px rgba(0,0,0,.3), 0 0 1px 2px rgba(0,0,0,.4);\r\n      border-radius: 50%;\r\n      cursor: hand;\r\n      transform: translate(-2px, -4px);\r\n    }\r\n  `,\r\n  ],\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SaturationComponent implements OnChanges {\r\n  @Input() hsl!: HSLA;\r\n  @Input() hsv!: HSVA;\r\n  @Input() radius!: number;\r\n  @Input() pointer!: Record<string, string>;\r\n  @Input() circle!: Record<string, string>;\r\n  @Output() onChange = new EventEmitter<{ data: HSVAsource; $event: Event }>();\r\n  background!: string;\r\n  pointerTop!: string;\r\n  pointerLeft!: string;\r\n\r\n  ngOnChanges() {\r\n    this.background = `hsl(${this.hsl.h}, 100%, 50%)`;\r\n    this.pointerTop = -(this.hsv.v * 100) + 1 + 100 + '%';\r\n    this.pointerLeft = this.hsv.s * 100 + '%';\r\n  }\r\n  handleChange({ top, left, containerHeight, containerWidth, $event }) {\r\n    if (left < 0) {\r\n      left = 0;\r\n    } else if (left > containerWidth) {\r\n      left = containerWidth;\r\n    } else if (top < 0) {\r\n      top = 0;\r\n    } else if (top > containerHeight) {\r\n      top = containerHeight;\r\n    }\r\n\r\n    const saturation = left / containerWidth;\r\n    let bright = -(top / containerHeight) + 1;\r\n    bright = bright > 0 ? bright : 0;\r\n    bright = bright > 1 ? 1 : bright;\r\n\r\n    const data: HSVAsource = {\r\n      h: this.hsl.h,\r\n      s: saturation,\r\n      v: bright,\r\n      a: this.hsl.a,\r\n      source: 'hsva',\r\n    };\r\n    this.onChange.emit({ data, $event });\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [SaturationComponent],\r\n  exports: [SaturationComponent],\r\n  imports: [CommonModule, CoordinatesModule],\r\n})\r\nexport class SaturationModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  NgModule,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\n\r\nimport { CheckboardModule } from './checkboard.component';\r\n\r\n@Component({\r\n  selector: 'color-swatch',\r\n  template: `\r\n    <div\r\n      class=\"swatch\"\r\n      [ngStyle]=\"currentStyles()\"\r\n      [attr.title]=\"color\"\r\n      (click)=\"handleClick(color, $event)\"\r\n      (keydown.enter)=\"handleClick(color, $event)\"\r\n      (focus)=\"handleFocus()\"\r\n      (blur)=\"handleFocusOut()\"\r\n      (mouseover)=\"handleHover(color, $event)\"\r\n      tabindex=\"0\"\r\n    >\r\n      <ng-content></ng-content>\r\n      <color-checkboard\r\n        *ngIf=\"color === 'transparent'\"\r\n        boxShadow=\"inset 0 0 0 1px rgba(0,0,0,0.1)\"\r\n      ></color-checkboard>\r\n    </div>\r\n  `,\r\n  styles: [\r\n    `\r\n      .swatch {\r\n        outline: none;\r\n        height: 100%;\r\n        width: 100%;\r\n        cursor: pointer;\r\n        position: relative;\r\n      }\r\n    `,\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SwatchComponent implements OnInit {\r\n  @Input() color!: string;\r\n  @Input() style: Record<string, string> = {};\r\n  @Input() focusStyle: Record<string, string> = {};\r\n  @Input() focus!: boolean;\r\n  @Output() onClick = new EventEmitter<any>();\r\n  @Output() onHover = new EventEmitter<any>();\r\n  divStyles: Record<string, string> = {};\r\n  focusStyles: Record<string, string> = {};\r\n  inFocus = false;\r\n\r\n  ngOnInit() {\r\n    this.divStyles = {\r\n      background: this.color as string,\r\n      ...this.style,\r\n    };\r\n  }\r\n  currentStyles() {\r\n    this.focusStyles = {\r\n      ...this.divStyles,\r\n      ...this.focusStyle,\r\n    };\r\n    return this.focus || this.inFocus ? this.focusStyles : this.divStyles;\r\n  }\r\n  handleFocusOut() {\r\n    this.inFocus = false;\r\n  }\r\n  handleFocus() {\r\n    this.inFocus = true;\r\n  }\r\n  handleHover(hex: string, $event) {\r\n    this.onHover.emit({ hex, $event });\r\n  }\r\n  handleClick(hex: string, $event) {\r\n    this.onClick.emit({ hex, $event });\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [SwatchComponent],\r\n  exports: [SwatchComponent],\r\n  imports: [CommonModule, CheckboardModule],\r\n})\r\nexport class SwatchModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  NgModule,\r\n  OnChanges,\r\n  Output,\r\n} from '@angular/core';\r\nimport { CoordinatesModule } from './coordinates.directive';\r\nimport { HSLA, RGBA } from './helpers/color.interfaces';\r\nimport { TinyColor } from '@ctrl/tinycolor';\r\n\r\n\r\n@Component({\r\n  selector: 'color-shade',\r\n  template: `\r\n    <div class=\"shade\" [style.border-radius]=\"radius\">\r\n      <div\r\n        class=\"shade-gradient\"\r\n        [ngStyle]=\"gradient\"\r\n        [style.box-shadow]=\"shadow\"\r\n        [style.border-radius]=\"radius\"\r\n      ></div>\r\n      <div\r\n        ngx-color-coordinates\r\n        (coordinatesChange)=\"handleChange($event)\"\r\n        class=\"shade-container\"\r\n      >\r\n        <div\r\n          class=\"shade-pointer\"\r\n          [style.left.%]=\"pointerLeft\"\r\n          [style.top.%]=\"pointerTop\"\r\n        >\r\n          <div class=\"shade-slider\" [ngStyle]=\"pointer\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [\r\n    `\r\n    .shade {\r\n      position: absolute;\r\n      top: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n    }\r\n    .shade-gradient {\r\n      position: absolute;\r\n      top: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n    }\r\n    .shade-container {\r\n      position: relative;\r\n      height: 100%;\r\n      margin: 0 3px;\r\n    }\r\n    .shade-pointer {\r\n      position: absolute;\r\n    }\r\n    .shade-slider {\r\n      width: 4px;\r\n      border-radius: 1px;\r\n      height: 8px;\r\n      box-shadow: 0 0 2px rgba(0, 0, 0, .6);\r\n      background: #fff;\r\n      margin-top: 1px;\r\n      transform: translateX(-2px);\r\n    },\r\n  `,\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class ShadeComponent implements OnChanges {\r\n  @Input() hsl!: HSLA;\r\n  @Input() rgb!: RGBA;\r\n  @Input() pointer!: Record<string, string>;\r\n  @Input() shadow!: string;\r\n  @Input() radius!: string;\r\n  @Output() onChange = new EventEmitter<any>();\r\n  gradient!: Record<string, string>;\r\n  pointerLeft!: number;\r\n  pointerTop?: number;\r\n\r\n  ngOnChanges() {\r\n    this.gradient = {\r\n      background: `linear-gradient(to right,\r\n          hsl(${this.hsl.h}, 90%, 55%),\r\n          #000)`,\r\n    };\r\n    const hsv = new TinyColor(this.hsl).toHsv();\r\n    this.pointerLeft = 100 - (hsv.v * 100);\r\n  }\r\n\r\n  handleChange({ left, containerWidth, $event }): void {\r\n    let data;\r\n    let v: number;\r\n    if (left < 0) {\r\n      v = 0;\r\n    } else if (left > containerWidth) {\r\n      v = 1;\r\n    } else {\r\n      v = Math.round((left * 100) / containerWidth) / 100;\r\n    }\r\n\r\n    const hsv = new TinyColor(this.hsl).toHsv();\r\n    if (hsv.v !== v) {\r\n      data = {\r\n        h: this.hsl.h,\r\n        s: 100,\r\n        v: 1 - v,\r\n        l: this.hsl.l,\r\n        a: this.hsl.a,\r\n        source: 'rgb',\r\n      };\r\n    }\r\n\r\n    if (!data) {\r\n      return;\r\n    }\r\n\r\n    this.onChange.emit({ data, $event });\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [ShadeComponent],\r\n  exports: [ShadeComponent],\r\n  imports: [CommonModule, CoordinatesModule],\r\n})\r\nexport class ShadeModule {}\r\n"]}