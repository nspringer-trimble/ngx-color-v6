{"version":3,"file":"ngx-color-chrome.js","sources":["../../../../src/lib/components/chrome/chrome-fields.component.ts","../../../../src/lib/components/chrome/chrome.component.ts","../../../../src/lib/components/chrome/ngx-color-chrome.ts"],"sourcesContent":["import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\n\r\nimport { isValidHex, HSLA, RGBA } from 'ngx-color';\r\nimport { TinyColor } from '@ctrl/tinycolor';\r\n\r\n@Component({\r\n  selector: 'color-chrome-fields',\r\n  template: `\r\n    <div class=\"chrome-wrap\">\r\n      <div class=\"chrome-fields\">\r\n        <ng-template [ngIf]=\"view === 'hex'\">\r\n          <div class=\"chrome-field\">\r\n            <color-editable-input\r\n              [style]=\"{ input: input, label: label }\"\r\n              label=\"hex\"\r\n              [value]=\"hex\"\r\n              (onChange)=\"handleChange($event)\"\r\n            ></color-editable-input>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template [ngIf]=\"view === 'rgb'\">\r\n          <div class=\"chrome-field\">\r\n            <color-editable-input\r\n              [style]=\"{ input: input, label: label }\"\r\n              label=\"r\"\r\n              [value]=\"rgb.r\"\r\n              (onChange)=\"handleChange($event)\"\r\n            ></color-editable-input>\r\n          </div>\r\n          <div class=\"chrome-field\">\r\n            <color-editable-input\r\n              [style]=\"{ input: input, label: label }\"\r\n              label=\"g\"\r\n              [value]=\"rgb.g\"\r\n              (onChange)=\"handleChange($event)\"\r\n            ></color-editable-input>\r\n          </div>\r\n          <div class=\"chrome-field\">\r\n            <color-editable-input\r\n              [style]=\"{ input: input, label: label }\"\r\n              label=\"b\"\r\n              [value]=\"rgb.b\"\r\n              (onChange)=\"handleChange($event)\"\r\n            ></color-editable-input>\r\n          </div>\r\n          <div class=\"chrome-field\">\r\n            <color-editable-input\r\n              *ngIf=\"!disableAlpha\"\r\n              [style]=\"{ input: input, label: label }\"\r\n              label=\"a\"\r\n              [value]=\"rgb.a\"\r\n              [arrowOffset]=\"0.01\"\r\n              (onChange)=\"handleChange($event)\"\r\n            ></color-editable-input>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template [ngIf]=\"view === 'hsl'\">\r\n          <div class=\"chrome-field\">\r\n            <color-editable-input\r\n              [style]=\"{ input: input, label: label }\"\r\n              label=\"h\"\r\n              [value]=\"round(hsl.h)\"\r\n              (onChange)=\"handleChange($event)\"\r\n            ></color-editable-input>\r\n          </div>\r\n          <div class=\"chrome-field\">\r\n            <color-editable-input\r\n              [style]=\"{ input: input, label: label }\"\r\n              label=\"s\"\r\n              [value]=\"round(hsl.s * 100) + '%'\"\r\n              (onChange)=\"handleChange($event)\"\r\n            ></color-editable-input>\r\n          </div>\r\n          <div class=\"chrome-field\">\r\n            <color-editable-input\r\n              [style]=\"{ input: input, label: label }\"\r\n              label=\"l\"\r\n              [value]=\"round(hsl.l * 100) + '%'\"\r\n              (onChange)=\"handleChange($event)\"\r\n            ></color-editable-input>\r\n          </div>\r\n          <div class=\"chrome-field\">\r\n            <color-editable-input\r\n              *ngIf=\"!disableAlpha\"\r\n              [style]=\"{ input: input, label: label }\"\r\n              label=\"a\"\r\n              [value]=\"hsl.a\"\r\n              [arrowOffset]=\"0.01\"\r\n              (onChange)=\"handleChange($event)\"\r\n            ></color-editable-input>\r\n          </div>\r\n        </ng-template>\r\n      </div>\r\n\r\n      <div class=\"chrome-toggle\">\r\n        <div class=\"chrome-icon\" (click)=\"toggleViews()\" #icon>\r\n          <svg class=\"chrome-toggle-svg\" viewBox=\"0 0 24 24\">\r\n            <path\r\n              #iconUp\r\n              fill=\"#333\"\r\n              d=\"M12,5.83L15.17,9L16.58,7.59L12,3L7.41,7.59L8.83,9L12,5.83Z\"\r\n            />\r\n            <path\r\n              #iconDown\r\n              fill=\"#333\"\r\n              d=\"M12,18.17L8.83,15L7.42,16.41L12,21L16.59,16.41L15.17,15Z\"\r\n            />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [\r\n    `\r\n      .chrome-wrap {\r\n        padding-top: 16px;\r\n        display: flex;\r\n      }\r\n      .chrome-fields {\r\n        flex: 1;\r\n        display: flex;\r\n        margin-left: -6px;\r\n      }\r\n      .chrome-field {\r\n        padding-left: 6px;\r\n        width: 100%;\r\n      }\r\n      .chrome-toggle {\r\n        width: 32px;\r\n        text-align: right;\r\n        position: relative;\r\n      }\r\n      .chrome-icon {\r\n        margin-right: -4px;\r\n        margin-top: 12px;\r\n        cursor: pointer;\r\n        position: relative;\r\n      }\r\n      .chrome-toggle-svg {\r\n        width: 24px;\r\n        height: 24px;\r\n        border: 1px transparent solid;\r\n        border-radius: 5px;\r\n      }\r\n      .chrome-toggle-svg:hover {\r\n        background: #eee;\r\n      }\r\n    `,\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class ChromeFieldsComponent implements OnInit {\r\n  @Input() disableAlpha!: boolean;\r\n  @Input() hsl!: HSLA;\r\n  @Input() rgb!: RGBA;\r\n  @Input() hex!: string;\r\n  @Output() onChange = new EventEmitter<any>();\r\n  view = '';\r\n  input: Record<string, string> = {\r\n    fontSize: '11px',\r\n    color: '#333',\r\n    width: '100%',\r\n    borderRadius: '2px',\r\n    border: 'none',\r\n    boxShadow: 'inset 0 0 0 1px #dadada',\r\n    height: '21px',\r\n    'text-align': 'center',\r\n  };\r\n  label: Record<string, string> = {\r\n    'text-transform': 'uppercase',\r\n    fontSize: '11px',\r\n    'line-height': '11px',\r\n    color: '#969696',\r\n    'text-align': 'center',\r\n    display: 'block',\r\n    marginTop: '12px',\r\n  };\r\n\r\n  ngOnInit() {\r\n    if (this.hsl.a === 1 && this.view !== 'hex') {\r\n      this.view = 'hex';\r\n    } else if (this.view !== 'rgb' && this.view !== 'hsl') {\r\n      this.view = 'rgb';\r\n    }\r\n  }\r\n  toggleViews() {\r\n    if (this.view === 'hex') {\r\n      this.view = 'rgb';\r\n    } else if (this.view === 'rgb') {\r\n      this.view = 'hsl';\r\n    } else if (this.view === 'hsl') {\r\n      if (this.hsl.a === 1) {\r\n        this.view = 'hex';\r\n      } else {\r\n        this.view = 'rgb';\r\n      }\r\n    }\r\n  }\r\n  round(value) {\r\n    return Math.round(value);\r\n  }\r\n  handleChange({ data, $event }) {\r\n    if (data.hex) {\r\n      if (isValidHex(data.hex)) {\r\n        const color = new TinyColor(data.hex);\r\n        this.onChange.emit({\r\n          data: {\r\n            hex: this.disableAlpha ? color.toHex() : color.toHex8(),\r\n            source: 'hex',\r\n          },\r\n          $event,\r\n        });\r\n      }\r\n    } else if (data.r || data.g || data.b) {\r\n      this.onChange.emit({\r\n        data: {\r\n          r: data.r || this.rgb.r,\r\n          g: data.g || this.rgb.g,\r\n          b: data.b || this.rgb.b,\r\n          source: 'rgb',\r\n        },\r\n        $event,\r\n      });\r\n    } else if (data.a) {\r\n      if (data.a < 0) {\r\n        data.a = 0;\r\n      } else if (data.a > 1) {\r\n        data.a = 1;\r\n      }\r\n\r\n      if (this.disableAlpha) {\r\n        data.a = 1;\r\n      }\r\n\r\n      this.onChange.emit({\r\n        data: {\r\n          h: this.hsl.h,\r\n          s: this.hsl.s,\r\n          l: this.hsl.l,\r\n          a: Math.round(data.a * 100) / 100,\r\n          source: 'rgb',\r\n        },\r\n        $event,\r\n      });\r\n    } else if (data.h || data.s || data.l) {\r\n      this.onChange.emit({\r\n        data: {\r\n          h: data.h || this.hsl.h,\r\n          s: data.s || this.hsl.s,\r\n          l: data.l || this.hsl.l,\r\n          source: 'hsl',\r\n        },\r\n        $event,\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  Input,\r\n  NgModule,\r\n} from '@angular/core';\r\n\r\nimport {\r\n  AlphaModule,\r\n  CheckboardModule,\r\n  ColorWrap,\r\n  EditableInputModule,\r\n  HueModule,\r\n  SaturationModule,\r\n} from 'ngx-color';\r\nimport { ChromeFieldsComponent } from './chrome-fields.component';\r\n\r\n@Component({\r\n  selector: 'color-chrome',\r\n  template: `\r\n  <div class=\"chrome-picker {{ className }}\">\r\n    <div class=\"saturation\">\r\n      <color-saturation\r\n        [hsl]=\"hsl\"\r\n        [hsv]=\"hsv\"\r\n        [circle]=\"circle\"\r\n        (onChange)=\"handleValueChange($event)\"\r\n      ></color-saturation>\r\n    </div>\r\n    <div class=\"chrome-body\">\r\n      <div class=\"chrome-controls\">\r\n        <div class=\"chrome-color\">\r\n          <div class=\"chrome-swatch\">\r\n            <div class=\"chrome-active\"\r\n              [style.background]=\"activeBackground\"\r\n            ></div>\r\n            <color-checkboard></color-checkboard>\r\n          </div>\r\n        </div>\r\n        <div class=\"chrome-toggles\">\r\n          <div class=\"chrome-hue\">\r\n            <color-hue\r\n              [radius]=\"2\"\r\n              [hsl]=\"hsl\"\r\n              [pointer]=\"pointer\"\r\n              (onChange)=\"handleValueChange($event)\"\r\n            ></color-hue>\r\n          </div>\r\n          <div class=\"chrome-alpha\" *ngIf=\"!disableAlpha\">\r\n            <color-alpha\r\n              [radius]=\"2\" [rgb]=\"rgb\" [hsl]=\"hsl\"\r\n              [pointer]=\"pointer\" (onChange)=\"handleValueChange($event)\"\r\n            ></color-alpha>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <color-chrome-fields\r\n        [rgb]=\"rgb\" [hsl]=\"hsl\" [hex]=\"hex\"\r\n        [disableAlpha]=\"disableAlpha\"\r\n        (onChange)=\"handleValueChange($event)\"\r\n      ></color-chrome-fields>\r\n    </div>\r\n  </div>\r\n  `,\r\n  styles: [\r\n    `\r\n      .chrome-picker {\r\n        background: #fff;\r\n        border-radius: 2px;\r\n        box-shadow: 0 0 2px rgba(0, 0, 0, 0.3), 0 4px 8px rgba(0, 0, 0, 0.3);\r\n        box-sizing: initial;\r\n        width: 225px;\r\n        font-family: 'Menlo';\r\n      }\r\n      .chrome-controls {\r\n        display: flex;\r\n      }\r\n      .chrome-color {\r\n        width: 42px;\r\n      }\r\n      .chrome-body {\r\n        padding: 14px 14px 12px;\r\n      }\r\n      .chrome-active {\r\n        position: absolute;\r\n        top: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        right: 0;\r\n        border-radius: 20px;\r\n        box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.1);\r\n        z-index: 2;\r\n      }\r\n      .chrome-swatch {\r\n        width: 28px;\r\n        height: 28px;\r\n        border-radius: 15px;\r\n        position: relative;\r\n        overflow: hidden;\r\n      }\r\n      .saturation {\r\n        width: 100%;\r\n        padding-bottom: 55%;\r\n        position: relative;\r\n        border-radius: 2px 2px 0 0;\r\n        overflow: hidden;\r\n      }\r\n      .chrome-toggles {\r\n        flex: 1;\r\n      }\r\n      .chrome-hue {\r\n        height: 10px;\r\n        position: relative;\r\n        margin-bottom: 8px;\r\n      }\r\n      .chrome-alpha {\r\n        height: 10px;\r\n        position: relative;\r\n      }\r\n    `,\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class ChromeComponent extends ColorWrap {\r\n  /** Remove alpha slider and options from picker */\r\n  @Input() disableAlpha = false;\r\n  circle: Record<string, string> = {\r\n    width: '12px',\r\n    height: '12px',\r\n    borderRadius: '6px',\r\n    boxShadow: 'rgb(255, 255, 255) 0px 0px 0px 1px inset',\r\n    transform: 'translate(-6px, -8px)',\r\n  };\r\n  pointer: Record<string, string> = {\r\n    width: '12px',\r\n    height: '12px',\r\n    borderRadius: '6px',\r\n    transform: 'translate(-6px, -2px)',\r\n    backgroundColor: 'rgb(248, 248, 248)',\r\n    boxShadow: '0 1px 4px 0 rgba(0, 0, 0, 0.37)',\r\n  };\r\n  activeBackground!: string;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  afterValidChange() {\r\n    const alpha = this.disableAlpha ? 1 : this.rgb.a;\r\n    this.activeBackground = `rgba(${this.rgb.r}, ${this.rgb.g}, ${this.rgb.b}, ${alpha})`;\r\n  }\r\n  handleValueChange({ data, $event }) {\r\n    this.handleChange(data, $event);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [ChromeComponent, ChromeFieldsComponent],\r\n  exports: [ChromeComponent, ChromeFieldsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AlphaModule,\r\n    CheckboardModule,\r\n    EditableInputModule,\r\n    HueModule,\r\n    SaturationModule,\r\n  ],\r\n})\r\nexport class ColorChromeModule {}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './chrome.component';\n\nexport {ChromeFieldsComponent as ɵa} from './chrome-fields.component';"],"names":[],"mappings":"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"}