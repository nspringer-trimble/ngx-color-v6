{"version":3,"file":"ngx-color-block.js","sources":["../../../../src/lib/components/block/block-swatches.component.ts","../../../../src/lib/components/block/block.component.ts","../../../../src/lib/components/block/ngx-color-block.ts"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { Shape } from 'ngx-color';\r\n\r\n@Component({\r\n  selector: 'color-block-swatches',\r\n  template: `\r\n    <div class=\"block-swatches\">\r\n      <color-swatch\r\n        *ngFor=\"let c of colors\"\r\n        [color]=\"c\"\r\n        [style]=\"swatchStyle\"\r\n        [focusStyle]=\"focusStyle(c)\"\r\n        (onClick)=\"handleClick($event)\"\r\n        (onHover)=\"onSwatchHover.emit($event)\"\r\n      ></color-swatch>\r\n      <div class=\"clear\"></div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .block-swatches {\r\n      margin-right: -10px;\r\n    }\r\n    .clear {\r\n      clear: both;\r\n    }\r\n  `],\r\n})\r\nexport class BlockSwatchesComponent implements OnInit {\r\n  @Input() colors!: string[] | Shape[];\r\n  @Output() onClick = new EventEmitter<any>();\r\n  @Output() onSwatchHover = new EventEmitter<any>();\r\n  swatchStyle?: {[key: string]: string};\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.swatchStyle = {\r\n      width: '22px',\r\n      height: '22px',\r\n      float: 'left',\r\n      marginRight: '10px',\r\n      marginBottom: '10px',\r\n      borderRadius: '4px',\r\n    };\r\n  }\r\n  handleClick({hex, $event}) {\r\n    this.onClick.emit({hex, $event});\r\n  }\r\n  focusStyle(c) {\r\n    return {\r\n      boxShadow: `${ c } 0 0 4px`,\r\n    };\r\n  }\r\n\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  Input,\r\n  NgModule,\r\n} from '@angular/core';\r\n\r\nimport {\r\n  CheckboardModule,\r\n  ColorWrap,\r\n  EditableInputModule,\r\n  SwatchModule,\r\n  getContrastingColor,\r\n  isValidHex,\r\n} from 'ngx-color';\r\nimport { BlockSwatchesComponent } from './block-swatches.component';\r\n\r\n@Component({\r\n  selector: 'color-block',\r\n  template: `\r\n  <div class=\"block-card block-picker {{ className }}\">\r\n    <div class=\"block-triangle\" *ngIf=\"triangle !== 'hide'\"\r\n      [style.border-color]=\"'transparent transparent ' + this.hex + ' transparent'\"\r\n    ></div>\r\n\r\n    <div class=\"block-head\" [style.background]=\"hex\">\r\n      <color-checkboard *ngIf=\"hex === 'transparent'\"\r\n        borderRadius=\"6px 6px 0 0\"\r\n      ></color-checkboard>\r\n      <div class=\"block-label\" [style.color]=\"getContrastingColor(hex)\">\r\n        {{ hex }}\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"block-body\">\r\n      <color-block-swatches [colors]=\"colors\"\r\n        (onClick)=\"handleBlockChange($event)\"\r\n        (onSwatchHover)=\"onSwatchHover.emit($event)\"\r\n      ></color-block-swatches>\r\n      <color-editable-input [value]=\"hex\"\r\n        (onChange)=\"handleValueChange($event)\"\r\n        [style]=\"{input: input, wrap: wrap}\"\r\n      ></color-editable-input>\r\n    </div>\r\n  </div>\r\n  `,\r\n  styles: [\r\n    `\r\n    .block-card {\r\n      background: #fff;\r\n      border-radius: 6px;\r\n      box-shadow: 0 1px rgba(0, 0, 0, .1);\r\n      position: relative;\r\n    }\r\n    .block-head {\r\n      align-items: center;\r\n      border-radius: 6px 6px 0 0;\r\n      display: flex;\r\n      height: 110px;\r\n      justify-content: center;\r\n      position: relative;\r\n    }\r\n    .block-body {\r\n      padding: 10px;\r\n    }\r\n    .block-label {\r\n      font-size: 18px;\r\n      position: relative;\r\n    }\r\n    .block-triangle {\r\n      border-style: solid;\r\n      border-width: 0 10px 10px 10px;\r\n      height: 0;\r\n      left: 50%;\r\n      margin-left: -10px;\r\n      position: absolute;\r\n      top: -10px;\r\n      width: 0;\r\n    }\r\n  `,\r\n  ],\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class BlockComponent extends ColorWrap {\r\n  /** Pixel value for picker width */\r\n  @Input() width: string | number = 170;\r\n  /** Color squares to display */\r\n  @Input() colors = [\r\n    '#D9E3F0',\r\n    '#F47373',\r\n    '#697689',\r\n    '#37D67A',\r\n    '#2CCCE4',\r\n    '#555555',\r\n    '#dce775',\r\n    '#ff8a65',\r\n    '#ba68c8',\r\n  ];\r\n  @Input() triangle: 'top' | 'hide' = 'top';\r\n  input: {[key: string]: string} = {\r\n    width: '100%',\r\n    fontSize: '12px',\r\n    color: '#666',\r\n    border: '0px',\r\n    outline: 'none',\r\n    height: '22px',\r\n    boxShadow: 'inset 0 0 0 1px #ddd',\r\n    borderRadius: '4px',\r\n    padding: '0 7px',\r\n    boxSizing: 'border-box',\r\n  };\r\n  wrap: {[key: string]: string} = {\r\n    position: 'relative',\r\n    width: '100%',\r\n  };\r\n  disableAlpha = true;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  handleValueChange({ data, $event }) {\r\n    this.handleBlockChange({ hex: data, $event });\r\n  }\r\n  getContrastingColor(hex) {\r\n    return getContrastingColor(hex);\r\n  }\r\n  handleBlockChange({ hex, $event }) {\r\n    if (isValidHex(hex)) {\r\n      // this.hex = hex;\r\n      this.handleChange(\r\n        {\r\n          hex,\r\n          source: 'hex',\r\n        },\r\n        $event,\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [BlockComponent, BlockSwatchesComponent],\r\n  exports: [BlockComponent, BlockSwatchesComponent],\r\n  imports: [CommonModule, CheckboardModule, SwatchModule, EditableInputModule],\r\n})\r\nexport class ColorBlockModule {}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './block.component';\n\nexport {BlockSwatchesComponent as Éµa} from './block-swatches.component';"],"names":[],"mappings":";;;;MA4Ba,sBAAsB;IAMjC;QAJU,YAAO,GAAG,IAAI,YAAY,EAAO,CAAC;QAClC,kBAAa,GAAG,IAAI,YAAY,EAAO,CAAC;KAGjC;IAEjB,QAAQ;QACN,IAAI,CAAC,WAAW,GAAG;YACjB,KAAK,EAAE,MAAM;YACb,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,MAAM;YACb,WAAW,EAAE,MAAM;YACnB,YAAY,EAAE,MAAM;YACpB,YAAY,EAAE,KAAK;SACpB,CAAC;KACH;IACD,WAAW,CAAC,EAAC,GAAG,EAAE,MAAM,EAAC;QACvB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC,GAAG,EAAE,MAAM,EAAC,CAAC,CAAC;KAClC;IACD,UAAU,CAAC,CAAC;QACV,OAAO;YACL,SAAS,EAAE,GAAI,CAAE,UAAU;SAC5B,CAAC;KACH;;;YAjDF,SAAS,SAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,QAAQ,EAAE;;;;;;;;;;;;GAYT;yBACQ;;;;;;;GAOR;aACF;;;;qBAEE,KAAK;sBACL,MAAM;4BACN,MAAM;;;MCsDI,cAAe,SAAQ,SAAS;IAkC3C;QACE,KAAK,EAAE,CAAC;;QAjCD,UAAK,GAAoB,GAAG,CAAC;;QAE7B,WAAM,GAAG;YAChB,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;SACV,CAAC;QACO,aAAQ,GAAmB,KAAK,CAAC;QAC1C,UAAK,GAA4B;YAC/B,KAAK,EAAE,MAAM;YACb,QAAQ,EAAE,MAAM;YAChB,KAAK,EAAE,MAAM;YACb,MAAM,EAAE,KAAK;YACb,OAAO,EAAE,MAAM;YACf,MAAM,EAAE,MAAM;YACd,SAAS,EAAE,sBAAsB;YACjC,YAAY,EAAE,KAAK;YACnB,OAAO,EAAE,OAAO;YAChB,SAAS,EAAE,YAAY;SACxB,CAAC;QACF,SAAI,GAA4B;YAC9B,QAAQ,EAAE,UAAU;YACpB,KAAK,EAAE,MAAM;SACd,CAAC;QACF,iBAAY,GAAG,IAAI,CAAC;KAInB;IAED,iBAAiB,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE;QAChC,IAAI,CAAC,iBAAiB,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;KAC/C;IACD,mBAAmB,CAAC,GAAG;QACrB,OAAO,mBAAmB,CAAC,GAAG,CAAC,CAAC;KACjC;IACD,iBAAiB,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE;QAC/B,IAAI,UAAU,CAAC,GAAG,CAAC,EAAE;;YAEnB,IAAI,CAAC,YAAY,CACf;gBACE,GAAG;gBACH,MAAM,EAAE,KAAK;aACd,EACD,MAAM,CACP,CAAC;SACH;KACF;;;YA1HF,SAAS,SAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BT;gBAoCD,mBAAmB,EAAE,KAAK;gBAC1B,eAAe,EAAE,uBAAuB,CAAC,MAAM;yBAnC7C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAgCD;aAIF;;;;oBAGE,KAAK;qBAEL,KAAK;uBAWL,KAAK;;MAgDK,gBAAgB;;;YAL5B,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,cAAc,EAAE,sBAAsB,CAAC;gBACtD,OAAO,EAAE,CAAC,cAAc,EAAE,sBAAsB,CAAC;gBACjD,OAAO,EAAE,CAAC,YAAY,EAAE,gBAAgB,EAAE,YAAY,EAAE,mBAAmB,CAAC;aAC7E;;;ACnJD;;;;;;"}