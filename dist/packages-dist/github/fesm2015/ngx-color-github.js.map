{"version":3,"file":"ngx-color-github.js","sources":["../../../../src/lib/components/github/github-swatch.component.ts","../../../../src/lib/components/github/github.component.ts","../../../../src/lib/components/github/ngx-color-github.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'color-github-swatch',\r\n  template: `\r\n    <div class=\"github-swatch\">\r\n      <color-swatch\r\n        [color]=\"color\"\r\n        [focusStyle]=\"focusStyle\"\r\n        (onClick)=\"handleClick($event)\"\r\n        (onHover)=\"onSwatchHover.emit($event)\"\r\n        class=\"swatch\"\r\n      ></color-swatch>\r\n      <div class=\"clear\"></div>\r\n    </div>\r\n  `,\r\n  styles: [\r\n    `\r\n      .github-swatch {\r\n        width: 25px;\r\n        height: 25px;\r\n        font-size: 0;\r\n      }\r\n    `,\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class GithubSwatchComponent {\r\n  @Input() color!: string;\r\n  @Output() onClick = new EventEmitter<any>();\r\n  @Output() onSwatchHover = new EventEmitter<any>();\r\n  focusStyle = {\r\n    position: 'relative',\r\n    'z-index': '2',\r\n    outline: '2px solid #fff',\r\n    'box-shadow': '0 0 5px 2px rgba(0,0,0,0.25)',\r\n  };\r\n\r\n  handleClick({ hex, $event }) {\r\n    this.onClick.emit({ hex, $event });\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  Input,\r\n  NgModule,\r\n} from '@angular/core';\r\n\r\nimport { ColorWrap, SwatchModule, isValidHex } from 'ngx-color';\r\nimport { GithubSwatchComponent } from './github-swatch.component';\r\n\r\n@Component({\r\n  selector: 'color-github',\r\n  template: `\r\n  <div class=\"github-picker {{ triangle }}-triangle {{ className }}\"\r\n    [style.width.px]=\"width\"\r\n  >\r\n    <div class=\"triangleShadow\"></div>\r\n    <div class=\"triangle\"></div>\r\n    <color-github-swatch *ngFor=\"let color of colors\"\r\n      [color]=\"color\"\r\n      (onClick)=\"handleBlockChange($event)\"\r\n      (onSwatchHover)=\"onSwatchHover.emit($event)\"\r\n    ></color-github-swatch>\r\n  </div>\r\n  `,\r\n  styles: [\r\n    `\r\n  .github-picker {\r\n    background: rgb(255, 255, 255);\r\n    border: 1px solid rgba(0, 0, 0, 0.2);\r\n    box-shadow: rgba(0, 0, 0, 0.15) 0px 3px 12px;\r\n    border-radius: 4px;\r\n    position: relative;\r\n    padding: 5px;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    box-sizing: border-box;\r\n  }\r\n  .triangleShadow {\r\n    position: absolute;\r\n    border-width: 8px;\r\n    border-style: solid;\r\n    border-color: transparent transparent rgba(0, 0, 0, 0.15);\r\n    border-image: initial;\r\n  }\r\n  .triangle {\r\n    position: absolute;\r\n    border-width: 7px;\r\n    border-style: solid;\r\n    border-color: transparent transparent rgb(255, 255, 255);\r\n    border-image: initial;\r\n  }\r\n  .hide-triangle > .triangle {\r\n    display: none;\r\n  }\r\n  .hide-triangle > .triangleShadow {\r\n    display: none;\r\n  }\r\n  .top-left-triangle > .triangle {\r\n    top: -14px;\r\n    left: 10px;\r\n  }\r\n  .top-left-triangle > .triangleShadow {\r\n    top: -16px;\r\n    left: 9px;\r\n  }\r\n  .top-right-triangle > .triangle {\r\n    top: -14px;\r\n    right: 10px;\r\n  }\r\n  .top-right-triangle > .triangleShadow {\r\n    top: -16px;\r\n    right: 9px;\r\n  }\r\n  .bottom-right-triangle > .triangle {\r\n    top: 35px;\r\n    right: 10px;\r\n    transform: rotate(180deg);\r\n  }\r\n  .bottom-right-triangle > .triangleShadow {\r\n    top: 37px;\r\n    right: 9px;\r\n    transform: rotate(180deg);\r\n  }\r\n  `,\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class GithubComponent extends ColorWrap {\r\n  /** Pixel value for picker width */\r\n  @Input() width: string | number = 212;\r\n  /** Color squares to display */\r\n  @Input() colors = [\r\n    '#B80000',\r\n    '#DB3E00',\r\n    '#FCCB00',\r\n    '#008B02',\r\n    '#006B76',\r\n    '#1273DE',\r\n    '#004DCF',\r\n    '#5300EB',\r\n    '#EB9694',\r\n    '#FAD0C3',\r\n    '#FEF3BD',\r\n    '#C1E1C5',\r\n    '#BEDADC',\r\n    '#C4DEF6',\r\n    '#BED3F3',\r\n    '#D4C4FB',\r\n  ];\r\n  @Input() triangle: 'hide' | 'top-left' | 'top-right' | 'bottom-right' = 'top-left';\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  handleBlockChange({ hex, $event }: { hex: string, $event: Event }) {\r\n    if (isValidHex(hex)) {\r\n      this.handleChange({ hex, source: 'hex' }, $event);\r\n    }\r\n  }\r\n  handleValueChange({ data, $event }) {\r\n    this.handleChange(data, $event);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [GithubComponent, GithubSwatchComponent],\r\n  exports: [GithubComponent, GithubSwatchComponent],\r\n  imports: [CommonModule, SwatchModule],\r\n})\r\nexport class ColorGithubModule {}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './github.component';\n\nexport {GithubSwatchComponent as Éµa} from './github-swatch.component';"],"names":[],"mappings":";;;;MA4Ba,qBAAqB;IA1BlC;QA4BY,YAAO,GAAG,IAAI,YAAY,EAAO,CAAC;QAClC,kBAAa,GAAG,IAAI,YAAY,EAAO,CAAC;QAClD,eAAU,GAAG;YACX,QAAQ,EAAE,UAAU;YACpB,SAAS,EAAE,GAAG;YACd,OAAO,EAAE,gBAAgB;YACzB,YAAY,EAAE,8BAA8B;SAC7C,CAAC;KAKH;IAHC,WAAW,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE;QACzB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,CAAC;KACpC;;;YAvCF,SAAS,SAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,QAAQ,EAAE;;;;;;;;;;;GAWT;gBAUD,eAAe,EAAE,uBAAuB,CAAC,MAAM;gBAC/C,mBAAmB,EAAE,KAAK;yBATxB;;;;;;KAMC;aAIJ;;;oBAEE,KAAK;sBACL,MAAM;4BACN,MAAM;;;MC2DI,eAAgB,SAAQ,SAAS;IAwB5C;QACE,KAAK,EAAE,CAAC;;QAvBD,UAAK,GAAoB,GAAG,CAAC;;QAE7B,WAAM,GAAG;YAChB,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;SACV,CAAC;QACO,aAAQ,GAAuD,UAAU,CAAC;KAIlF;IAED,iBAAiB,CAAC,EAAE,GAAG,EAAE,MAAM,EAAkC;QAC/D,IAAI,UAAU,CAAC,GAAG,CAAC,EAAE;YACnB,IAAI,CAAC,YAAY,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,MAAM,CAAC,CAAC;SACnD;KACF;IACD,iBAAiB,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE;QAChC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;KACjC;;;YAlHF,SAAS,SAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,QAAQ,EAAE;;;;;;;;;;;;GAYT;gBA8DD,eAAe,EAAE,uBAAuB,CAAC,MAAM;gBAC/C,mBAAmB,EAAE,KAAK;yBA7DxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA0DD;aAIF;;;;oBAGE,KAAK;qBAEL,KAAK;uBAkBL,KAAK;;MAqBK,iBAAiB;;;YAL7B,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,eAAe,EAAE,qBAAqB,CAAC;gBACtD,OAAO,EAAE,CAAC,eAAe,EAAE,qBAAqB,CAAC;gBACjD,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,CAAC;aACtC;;;ACpID;;;;;;"}