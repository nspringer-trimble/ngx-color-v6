{"version":3,"file":"ngx-color-sketch.js","sources":["../../../../src/lib/components/sketch/sketch-fields.component.ts","../../../../src/lib/components/sketch/sketch-preset-colors.component.ts","../../../../src/lib/components/sketch/sketch.component.ts","../../../../src/lib/components/sketch/ngx-color-sketch.ts"],"sourcesContent":["import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n} from '@angular/core';\r\n\r\nimport { isValidHex, HSLA, RGBA } from 'ngx-color';\r\nimport { TinyColor } from '@ctrl/tinycolor';\r\n\r\n@Component({\r\n  selector: 'color-sketch-fields',\r\n  template: `\r\n  <div class=\"sketch-fields\">\r\n    <div class=\"sketch-double\">\r\n      <color-editable-input\r\n        [style]=\"{ input: input, label: label }\"\r\n        label=\"hex\"\r\n        [value]=\"hex.replace('#', '')\"\r\n        (onChange)=\"handleChange($event)\"\r\n      ></color-editable-input>\r\n    </div>\r\n    <div class=\"sketch-single\">\r\n      <color-editable-input\r\n        [style]=\"{ input: input, label: label }\"\r\n        label=\"r\"\r\n        [value]=\"rgb.r\"\r\n        (onChange)=\"handleChange($event)\"\r\n        [dragLabel]=\"true\"\r\n        [dragMax]=\"255\"\r\n      ></color-editable-input>\r\n    </div>\r\n    <div class=\"sketch-single\">\r\n      <color-editable-input\r\n        [style]=\"{ input: input, label: label }\"\r\n        label=\"g\"\r\n        [value]=\"rgb.g\"\r\n        (onChange)=\"handleChange($event)\"\r\n        [dragLabel]=\"true\"\r\n        [dragMax]=\"255\"\r\n      ></color-editable-input>\r\n    </div>\r\n    <div class=\"sketch-single\">\r\n      <color-editable-input\r\n        [style]=\"{ input: input, label: label }\"\r\n        label=\"b\"\r\n        [value]=\"rgb.b\"\r\n        (onChange)=\"handleChange($event)\"\r\n        [dragLabel]=\"true\"\r\n        [dragMax]=\"255\"\r\n      ></color-editable-input>\r\n    </div>\r\n    <div class=\"sketch-alpha\" *ngIf=\"disableAlpha === false\">\r\n      <color-editable-input\r\n        [style]=\"{ input: input, label: label }\"\r\n        label=\"a\"\r\n        [value]=\"round(rgb.a * 100)\"\r\n        (onChange)=\"handleChange($event)\"\r\n        [dragLabel]=\"true\"\r\n        [dragMax]=\"100\"\r\n      ></color-editable-input>\r\n    </div>\r\n  </div>\r\n  `,\r\n  styles: [\r\n    `\r\n    .sketch-fields {\r\n      display: flex;\r\n      padding-top: 4px;\r\n    }\r\n    .sketch-double {\r\n      -webkit-box-flex: 2;\r\n      flex: 2 1 0%;\r\n    }\r\n    .sketch-single {\r\n      flex: 1 1 0%;\r\n      padding-left: 6px;\r\n    }\r\n    .sketch-alpha {\r\n      -webkit-box-flex: 1;\r\n      flex: 1 1 0%;\r\n      padding-left: 6px;\r\n    }\r\n    :host-context([dir=rtl]) .sketch-single {\r\n      padding-right: 6px;\r\n      padding-left: 0;\r\n    }\r\n    :host-context([dir=rtl]) .sketch-alpha {\r\n      padding-right: 6px;\r\n      padding-left: 0;\r\n    }\r\n  `,\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class SketchFieldsComponent {\r\n  @Input() hsl!: HSLA;\r\n  @Input() rgb!: RGBA;\r\n  @Input() hex!: string;\r\n  @Input() disableAlpha = false;\r\n  @Output() onChange = new EventEmitter<any>();\r\n  input: {[key: string]: string} = {\r\n    width: '100%',\r\n    padding: '4px 10% 3px',\r\n    border: 'none',\r\n    boxSizing: 'border-box',\r\n    boxShadow: 'inset 0 0 0 1px #ccc',\r\n    fontSize: '11px',\r\n  };\r\n  label: {[key: string]: string} = {\r\n    display: 'block',\r\n    textAlign: 'center',\r\n    fontSize: '11px',\r\n    color: '#222',\r\n    paddingTop: '3px',\r\n    paddingBottom: '4px',\r\n    textTransform: 'capitalize',\r\n  };\r\n\r\n  round(value) {\r\n    return Math.round(value);\r\n  }\r\n  handleChange({ data, $event }) {\r\n    if (data.hex) {\r\n      if (isValidHex(data.hex)) {\r\n        const color = new TinyColor(data.hex);\r\n        this.onChange.emit({\r\n          data: {\r\n            hex: this.disableAlpha || data.hex.length <= 6 ? color.toHex() : color.toHex8(),\r\n            source: 'hex',\r\n          },\r\n          $event,\r\n        });\r\n      }\r\n    } else if (data.r || data.g || data.b) {\r\n      this.onChange.emit({\r\n        data: {\r\n          r: data.r || this.rgb.r,\r\n          g: data.g || this.rgb.g,\r\n          b: data.b || this.rgb.b,\r\n          source: 'rgb',\r\n        },\r\n        $event,\r\n      });\r\n    } else if (data.a) {\r\n      if (data.a < 0) {\r\n        data.a = 0;\r\n      } else if (data.a > 100) {\r\n        data.a = 100;\r\n      }\r\n      data.a /= 100;\r\n\r\n      if (this.disableAlpha) {\r\n        data.a = 1;\r\n      }\r\n\r\n      this.onChange.emit({\r\n        data: {\r\n          h: this.hsl.h,\r\n          s: this.hsl.s,\r\n          l: this.hsl.l,\r\n          a: Math.round(data.a * 100) / 100,\r\n          source: 'rgb',\r\n        },\r\n        $event,\r\n      });\r\n    } else if (data.h || data.s || data.l) {\r\n      this.onChange.emit({\r\n        data: {\r\n          h: data.h || this.hsl.h,\r\n          s: Number((data.s && data.s) || this.hsl.s),\r\n          l: Number((data.l && data.l) || this.hsl.l),\r\n          source: 'hsl',\r\n        },\r\n        $event,\r\n      });\r\n    }\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n} from '@angular/core';\r\n\r\nimport { Shape } from 'ngx-color';\r\n\r\n@Component({\r\n  selector: 'color-sketch-preset-colors',\r\n  template: `\r\n  <div class=\"sketch-swatches\">\r\n    <div class=\"sketch-wrap\" *ngFor=\"let c of colors\">\r\n      <color-swatch\r\n        [color]=\"normalizeValue(c).color\"\r\n        [style]=\"swatchStyle\"\r\n        [focusStyle]=\"focusStyle(c)\"\r\n        (onClick)=\"handleClick($event)\"\r\n        (onHover)=\"onSwatchHover.emit($event)\"\r\n        class=\"swatch\"\r\n      ></color-swatch>\r\n    </div>\r\n  </div>\r\n  `,\r\n  styles: [\r\n    `\r\n    .sketch-swatches {\r\n      position: relative;\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      margin: 0px -10px;\r\n      padding: 10px 0px 0px 10px;\r\n      border-top: 1px solid rgb(238, 238, 238);\r\n    }\r\n    .sketch-wrap {\r\n      width: 16px;\r\n      height: 16px;\r\n      margin: 0px 10px 10px 0px;\r\n    }\r\n    :host-context([dir=rtl]) .sketch-swatches {\r\n      padding-right: 10px;\r\n      padding-left: 0;\r\n    }\r\n    :host-context([dir=rtl]) .sketch-wrap {\r\n      margin-left: 10px;\r\n      margin-right: 0;\r\n    }\r\n  `,\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class SketchPresetColorsComponent {\r\n  @Input() colors!: string[];\r\n  @Output() onClick = new EventEmitter<any>();\r\n  @Output() onSwatchHover = new EventEmitter<any>();\r\n  swatchStyle = {\r\n    borderRadius: '3px',\r\n    boxShadow: 'inset 0 0 0 1px rgba(0,0,0,.15)',\r\n  };\r\n\r\n  handleClick({ hex, $event }) {\r\n    this.onClick.emit({ hex, $event });\r\n  }\r\n  normalizeValue(val: string | Shape) {\r\n    if (typeof val === 'string') {\r\n      return { color: val };\r\n    }\r\n    return val;\r\n  }\r\n  focusStyle(val: string | Shape) {\r\n    const c = this.normalizeValue(val);\r\n    return {\r\n      boxShadow: `inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px ${c.color}`,\r\n    };\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  Input,\r\n  NgModule,\r\n} from '@angular/core';\r\n\r\nimport {\r\n  AlphaModule,\r\n  CheckboardModule,\r\n  ColorWrap,\r\n  EditableInputModule,\r\n  HueModule,\r\n  SaturationModule,\r\n  SwatchModule,\r\n  isValidHex,\r\n} from 'ngx-color';\r\nimport { SketchFieldsComponent } from './sketch-fields.component';\r\nimport { SketchPresetColorsComponent } from './sketch-preset-colors.component';\r\n\r\n@Component({\r\n  selector: 'color-sketch',\r\n  template: `\r\n  <div class=\"sketch-picker {{ className }}\" [style.width]=\"width\">\r\n    <div class=\"sketch-saturation\">\r\n      <color-saturation [hsl]=\"hsl\" [hsv]=\"hsv\"\r\n        (onChange)=\"handleValueChange($event)\"\r\n      >\r\n      </color-saturation>\r\n    </div>\r\n    <div class=\"sketch-controls\">\r\n      <div class=\"sketch-sliders\">\r\n        <div class=\"sketch-hue\">\r\n          <color-hue [hsl]=\"hsl\"\r\n            (onChange)=\"handleValueChange($event)\"\r\n          ></color-hue>\r\n        </div>\r\n        <div class=\"sketch-alpha\" *ngIf=\"disableAlpha === false\">\r\n          <color-alpha\r\n            [radius]=\"2\" [rgb]=\"rgb\" [hsl]=\"hsl\"\r\n            (onChange)=\"handleValueChange($event)\"\r\n          ></color-alpha>\r\n        </div>\r\n      </div>\r\n      <div class=\"sketch-color\">\r\n        <color-checkboard></color-checkboard>\r\n        <div class=\"sketch-active\" [style.background]=\"activeBackground\"></div>\r\n      </div>\r\n    </div>\r\n    <div class=\"sketch-fields-container\">\r\n      <color-sketch-fields\r\n        [rgb]=\"rgb\" [hsl]=\"hsl\" [hex]=\"hex\"\r\n        [disableAlpha]=\"disableAlpha\"\r\n        (onChange)=\"handleValueChange($event)\"\r\n      ></color-sketch-fields>\r\n    </div>\r\n    <div class=\"sketch-swatches-container\" *ngIf=\"presetColors && presetColors.length\">\r\n      <color-sketch-preset-colors\r\n        [colors]=\"presetColors\"\r\n        (onClick)=\"handleBlockChange($event)\"\r\n        (onSwatchHover)=\"onSwatchHover.emit($event)\"\r\n      ></color-sketch-preset-colors>\r\n    </div>\r\n  </div>\r\n  `,\r\n  styles: [\r\n    `\r\n    .sketch-picker {\r\n      padding: 10px 10px 3px;\r\n      box-sizing: initial;\r\n      background: #fff;\r\n      border-radius: 4px;\r\n      box-shadow: 0 0 0 1px rgba(0,0,0,.15), 0 8px 16px rgba(0,0,0,.15);\r\n    }\r\n    .sketch-saturation {\r\n      width: 100%;\r\n      padding-bottom: 75%;\r\n      position: relative;\r\n      overflow: hidden;\r\n    }\r\n    .sketch-fields-container {\r\n      display: block;\r\n    }\r\n    .sketch-swatches-container {\r\n      display: block;\r\n    }\r\n    .sketch-controls {\r\n      display: flex;\r\n    }\r\n    .sketch-sliders {\r\n      padding: 4px 0px;\r\n      -webkit-box-flex: 1;\r\n      flex: 1 1 0%;\r\n    }\r\n    .sketch-hue {\r\n      position: relative;\r\n      height: 10px;\r\n      overflow: hidden;\r\n    }\r\n    .sketch-alpha {\r\n      position: relative;\r\n      height: 10px;\r\n      margin-top: 4px;\r\n      overflow: hidden;\r\n    }\r\n    .sketch-color {\r\n      width: 24px;\r\n      height: 24px;\r\n      position: relative;\r\n      margin-top: 4px;\r\n      margin-left: 4px;\r\n      border-radius: 3px;\r\n    }\r\n    .sketch-active {\r\n      position: absolute;\r\n      top: 0px;\r\n      right: 0px;\r\n      bottom: 0px;\r\n      left: 0px;\r\n      border-radius: 2px;\r\n      box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset, rgba(0, 0, 0, 0.25) 0px 0px 4px inset;\r\n    }\r\n    :host-context([dir=rtl]) .sketch-color {\r\n      margin-right: 4px;\r\n      margin-left: 0;\r\n    }\r\n  `,\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class SketchComponent extends ColorWrap {\r\n  /** Remove alpha slider and options from picker */\r\n  @Input() disableAlpha = false;\r\n  /** Hex strings for default colors at bottom of picker */\r\n  @Input() presetColors = [\r\n    '#D0021B',\r\n    '#F5A623',\r\n    '#F8E71C',\r\n    '#8B572A',\r\n    '#7ED321',\r\n    '#417505',\r\n    '#BD10E0',\r\n    '#9013FE',\r\n    '#4A90E2',\r\n    '#50E3C2',\r\n    '#B8E986',\r\n    '#000000',\r\n    '#4A4A4A',\r\n    '#9B9B9B',\r\n    '#FFFFFF',\r\n  ];\r\n  /** Width of picker */\r\n  @Input() width = 200;\r\n  activeBackground!: string;\r\n  constructor() {\r\n    super();\r\n  }\r\n  afterValidChange() {\r\n    const alpha = this.disableAlpha ? 1 : this.rgb.a;\r\n    this.activeBackground = `rgba(${this.rgb.r}, ${this.rgb.g}, ${this.rgb.b}, ${alpha})`;\r\n  }\r\n  handleValueChange({ data, $event }) {\r\n    this.handleChange(data, $event);\r\n  }\r\n  handleBlockChange({ hex, $event }) {\r\n    if (isValidHex(hex)) {\r\n      // this.hex = hex;\r\n      this.handleChange(\r\n        {\r\n          hex,\r\n          source: 'hex',\r\n        },\r\n        $event,\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SketchComponent,\r\n    SketchFieldsComponent,\r\n    SketchPresetColorsComponent,\r\n  ],\r\n  exports: [\r\n    SketchComponent,\r\n    SketchFieldsComponent,\r\n    SketchPresetColorsComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AlphaModule,\r\n    CheckboardModule,\r\n    EditableInputModule,\r\n    HueModule,\r\n    SaturationModule,\r\n    SwatchModule,\r\n  ],\r\n})\r\nexport class ColorSketchModule {}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './sketch.component';\n\nexport {SketchFieldsComponent as ɵa} from './sketch-fields.component';\nexport {SketchPresetColorsComponent as ɵb} from './sketch-preset-colors.component';"],"names":[],"mappings":"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"}