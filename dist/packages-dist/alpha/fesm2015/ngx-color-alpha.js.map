{"version":3,"file":"ngx-color-alpha.js","sources":["../../../../src/lib/components/alpha/alpha-picker.component.ts","../../../../src/lib/components/alpha/ngx-color-alpha.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  Input,\r\n  NgModule,\r\n  OnChanges,\r\n} from '@angular/core';\r\n\r\nimport { AlphaModule, CheckboardModule, ColorWrap, toState } from 'ngx-color';\r\n\r\n@Component({\r\n  selector: 'color-alpha-picker',\r\n  template: `\r\n    <div class=\"alpha-picker {{ className }}\"\r\n      [style.width.px]=\"width\" [style.height.px]=\"height\">\r\n      <color-alpha\r\n        [hsl]=\"hsl\"\r\n        [rgb]=\"rgb\"\r\n        [pointer]=\"pointer\"\r\n        [direction]=\"direction\"\r\n        (onChange)=\"handlePickerChange($event)\"\r\n      ></color-alpha>\r\n    </div>\r\n  `,\r\n  styles: [\r\n    `\r\n    .alpha-picker {\r\n      position: relative;\r\n    }\r\n    .color-alpha {\r\n      radius: 2px;\r\n    }\r\n  `,\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class AlphaPickerComponent extends ColorWrap implements OnChanges {\r\n  /** Pixel value for picker width */\r\n  @Input() width: string | number = 316;\r\n  /** Pixel value for picker height */\r\n  @Input() height: string | number = 16;\r\n  @Input() direction: 'horizontal' | 'vertical' = 'horizontal';\r\n  pointer: {[key: string]: string} = {\r\n    width: '18px',\r\n    height: '18px',\r\n    borderRadius: '50%',\r\n    transform: 'translate(-9px, -2px)',\r\n    boxShadow: '0 1px 4px 0 rgba(0, 0, 0, 0.37)',\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n  ngOnChanges() {\r\n    if (this.direction === 'vertical') {\r\n      this.pointer.transform = 'translate(-3px, -9px)';\r\n    }\r\n    this.setState(toState(this.color, this.oldHue));\r\n  }\r\n  handlePickerChange({ data, $event }) {\r\n    this.handleChange(data, $event);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [AlphaPickerComponent],\r\n  exports: [AlphaPickerComponent],\r\n  imports: [CommonModule, AlphaModule, CheckboardModule],\r\n})\r\nexport class ColorAlphaModule {}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './alpha-picker.component';\n"],"names":[],"mappings":";;;;MAsCa,oBAAqB,SAAQ,SAAS;IAcjD;QACE,KAAK,EAAE,CAAC;;QAbD,UAAK,GAAoB,GAAG,CAAC;;QAE7B,WAAM,GAAoB,EAAE,CAAC;QAC7B,cAAS,GAA8B,YAAY,CAAC;QAC7D,YAAO,GAA4B;YACjC,KAAK,EAAE,MAAM;YACb,MAAM,EAAE,MAAM;YACd,YAAY,EAAE,KAAK;YACnB,SAAS,EAAE,uBAAuB;YAClC,SAAS,EAAE,iCAAiC;SAC7C,CAAC;KAID;IACD,WAAW;QACT,IAAI,IAAI,CAAC,SAAS,KAAK,UAAU,EAAE;YACjC,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,uBAAuB,CAAC;SAClD;QACD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;KACjD;IACD,kBAAkB,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE;QACjC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;KACjC;;;YApDF,SAAS,SAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,QAAQ,EAAE;;;;;;;;;;;GAWT;gBAWD,eAAe,EAAE,uBAAuB,CAAC,MAAM;gBAC/C,mBAAmB,EAAE,KAAK;yBAVxB;;;;;;;GAOD;aAIF;;;;oBAGE,KAAK;qBAEL,KAAK;wBACL,KAAK;;MA4BK,gBAAgB;;;YAL5B,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,oBAAoB,CAAC;gBACpC,OAAO,EAAE,CAAC,oBAAoB,CAAC;gBAC/B,OAAO,EAAE,CAAC,YAAY,EAAE,WAAW,EAAE,gBAAgB,CAAC;aACvD;;;ACtED;;;;;;"}