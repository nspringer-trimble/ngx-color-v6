{"version":3,"file":"ngx-color-circle.js","sources":["../../../../src/lib/components/circle/circle-swatch.component.ts","../../../../src/lib/components/circle/circle.component.ts","../../../../src/lib/components/circle/ngx-color-circle.ts"],"sourcesContent":["import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'color-circle-swatch',\r\n  template: `\r\n  <div class=\"circle-swatch\"\r\n    [style.width.px]=\"circleSize\" [style.height.px]=\"circleSize\"\r\n    [style.margin-right.px]=\"circleSpacing\" [style.margin-bottom.px]=\"circleSpacing\"\r\n    >\r\n    <color-swatch\r\n      [color]=\"color\" [style]=\"swatchStyle\" [focus]=\"focus\" [focusStyle]=\"focusStyle\"\r\n      (onClick)=\"handleClick($event)\" (onHover)=\"onSwatchHover.emit($event)\">\r\n    </color-swatch>\r\n    <div class=\"clear\"></div>\r\n  </div>\r\n  `,\r\n  styles: [\r\n    `\r\n  .circle-swatch {\r\n    transform: scale(1);\r\n    transition: transform 100ms ease;\r\n  }\r\n  .circle-swatch:hover {\r\n    transform: scale(1.2);\r\n  }\r\n  `,\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class CircleSwatchComponent implements OnChanges {\r\n  @Input() color!: string;\r\n  @Input() circleSize = 28;\r\n  @Input() circleSpacing = 14;\r\n  @Input() focus = false;\r\n  @Output() onClick = new EventEmitter<any>();\r\n  @Output() onSwatchHover = new EventEmitter<any>();\r\n  focusStyle: Record<string, string> = {};\r\n  swatchStyle: Record<string, string> = {\r\n    borderRadius: '50%',\r\n    background: 'transparent',\r\n    transition: '100ms box-shadow ease 0s',\r\n  };\r\n\r\n  ngOnChanges() {\r\n    this.swatchStyle.boxShadow = `inset 0 0 0 ${this.circleSize / 2}px ${this.color}`;\r\n    this.focusStyle.boxShadow = `inset 0 0 0 ${ this.circleSize / 2 }px ${ this.color }, 0 0 5px ${ this.color }`;\r\n    if (this.focus) {\r\n      this.focusStyle.boxShadow = `inset 0 0 0 3px ${ this.color }, 0 0 5px ${ this.color }`;\r\n    }\r\n  }\r\n  handleClick({ hex, $event }) {\r\n    this.onClick.emit({ hex, $event });\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  Input,\r\n  NgModule,\r\n} from '@angular/core';\r\nimport {\r\n  amber,\r\n  blue,\r\n  blueGrey,\r\n  brown,\r\n  cyan,\r\n  deepOrange,\r\n  deepPurple,\r\n  green,\r\n  indigo,\r\n  lightBlue,\r\n  lightGreen,\r\n  lime,\r\n  orange,\r\n  pink,\r\n  purple,\r\n  red,\r\n  teal,\r\n  yellow,\r\n} from 'material-colors';\r\nimport { TinyColor } from '@ctrl/tinycolor';\r\n\r\nimport { ColorWrap, SwatchModule, isValidHex } from 'ngx-color';\r\nimport { CircleSwatchComponent } from './circle-swatch.component';\r\n\r\n@Component({\r\n  selector: 'color-circle',\r\n  template: `\r\n    <div\r\n      class=\"circle-picker {{ className }}\"\r\n      [style.width.px]=\"width\"\r\n      [style.margin-right.px]=\"-circleSpacing\"\r\n      [style.margin-bottom.px]=\"-circleSpacing\"\r\n    >\r\n      <color-circle-swatch\r\n        *ngFor=\"let color of colors\"\r\n        [circleSize]=\"circleSize\"\r\n        [circleSpacing]=\"circleSpacing\"\r\n        [color]=\"color\"\r\n        [focus]=\"isActive(color)\"\r\n        (onClick)=\"handleBlockChange($event)\"\r\n        (onSwatchHover)=\"onSwatchHover.emit($event)\"\r\n      ></color-circle-swatch>\r\n    </div>\r\n  `,\r\n  styles: [\r\n    `\r\n      .circle-picker {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n      }\r\n    `,\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class CircleComponent extends ColorWrap {\r\n  /** Pixel value for picker width */\r\n  @Input() width: string | number = 252;\r\n  /** Color squares to display */\r\n  @Input()\r\n  colors: string[] = [\r\n    red['500'],\r\n    pink['500'],\r\n    purple['500'],\r\n    deepPurple['500'],\r\n    indigo['500'],\r\n    blue['500'],\r\n    lightBlue['500'],\r\n    cyan['500'],\r\n    teal['500'],\r\n    green['500'],\r\n    lightGreen['500'],\r\n    lime['500'],\r\n    yellow['500'],\r\n    amber['500'],\r\n    orange['500'],\r\n    deepOrange['500'],\r\n    brown['500'],\r\n    blueGrey['500'],\r\n  ];\r\n  /** Value for circle size */\r\n  @Input() circleSize = 28;\r\n  /** Value for spacing between circles */\r\n  @Input() circleSpacing = 14;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n  isActive(color: string) {\r\n    return new TinyColor(this.hex).equals(color);\r\n  }\r\n  handleBlockChange({ hex, $event }: { hex: string, $event: Event }) {\r\n    if (isValidHex(hex)) {\r\n      this.handleChange({ hex, source: 'hex' }, $event);\r\n    }\r\n  }\r\n  handleValueChange({ data, $event }) {\r\n    this.handleChange(data, $event);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [CircleComponent, CircleSwatchComponent],\r\n  exports: [CircleComponent, CircleSwatchComponent],\r\n  imports: [CommonModule, SwatchModule],\r\n})\r\nexport class ColorCircleModule {}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './circle.component';\n\nexport {CircleSwatchComponent as Éµa} from './circle-swatch.component';"],"names":[],"mappings":"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"}